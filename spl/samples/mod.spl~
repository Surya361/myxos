alias physicalSP S2;
alias syscall S3;
alias diskfree S0;
alias diskblock S13;
alias fat S7;
alias basicblk S8;
fat = 2560;
alias swoft S11;
swoft = 1344;
physicalSP = ([PTBR + 2 * (SP/512)] * 512) + (SP % 512);
syscall = [physicalSP - 1];
if (syscall == 1) then
	alias argument S4;
	argument = [physicalSP - 3];
	diskfree = 6 * 512;
	diskfree = diskfree + 20;
	while([diskfree] != 0) do
		if(diskfree == 6 * 512 + 448) then
		break;
		endif;
		diskfree = diskfree + 1;
	endwhile;
	if(diskfree != 6 * 512 + 448) then
		basicblk = diskfree - (6 * 512);
		while([fat] != argument && fat < 3071)do
			fat = fat + 8;
		endwhile;
		if(fat >= 3072)then
			fat = 2560 + 2;
			while([fat] != -1 && fat < 3071)do
				fat = fat + 8;
			endwhile;
			if(fat > 3072)then
				[physicalSP - 2] = -1;
				ireturn;
			else
				fat = fat - 2;
				[fat] = argument;
				[fat + 2] = basicblk;
				[diskfree] = 1;
				load(1,basicblk);
				alias data S9;
				data = 512 ;
				while(data < (512 + 256)) do
					[data] = -1;
					data = data + 1;
				endwhile;
				store(1,basicblk);
				store(5,19);
				store(6,20);
				[physicalSP - 2] = 0;
				ireturn;
			endif;
		else
			[physicalSP - 2] = 0;
			ireturn;
		endif;	
	else
		[physicalSP - 2] = -1;
		ireturn;
	endif;
else
	alias kpid S4;
	kpid = [physicalSP - 3];
	if([1024 + (kpid * 32) + 1] == 0)then
		[physicalSP - 2] = 0;
	else
		[1024 + (kpid * 32) +1] = 0;
		
	endif;
endif;
		
