alias PTBR_Process1 S0;
load(7,1);
load(8,2);
load(23,17);
load(24,18);
load(11,5);
load(12,6);
load(9,3);
load(10,4);
load(13,7);
load(14,8);
load(15,9);
load(16,10);
load(17,11);
load(18,12);
//load(19,13);
//load(20,14);
//load(21,15);
//load(22,16);
[READY_LIST + 0] = 0; //pid of init process
[READY_LIST + 32] = 1; //pid of first user process
load(25,21); // loading init process
load(26,22);
load(27,23);
load(29,25); // loading the other process
PTBR = 1024;
PTLR = 4;
[PTBR + 0] = 25; //setting the page table for init process
[PTBR + 1] = "01";
[PTBR + 2] = 26;
[PTBR + 3] = "01";
[PTBR + 4] = 27;
[PTBR + 5] = "01";
[PTBR + 6] = 28;
[PTBR + 7] = "01";
PTBR_Process1 = 1024 + 1 * 8;
[PTBR_Process1 + 0] = 29;
[PTBR_Process1 + 1] = "01";
[PTBR_Process1 + 2] = -1;
[PTBR_Process1 + 3] = "00";
[PTBR_Process1 + 4] = -1;
[PTBR_Process1 + 5] = "00";
[PTBR_Process1 + 6] = 30;
[PTBR_Process1 + 7] = "01";
[READY_LIST + 1] = 2;
[READY_LIST + 33] = 1; //ready state of process 1
[READY_LIST + 37] = PTBR_Process1; //PTBR of process1
[READY_LIST + 38] = 4;
[READY_LIST + 35] = 3 * 512; //setting the sp to logical address
[READY_LIST + 34] = 3 * 512; //setting the bp to logical address
[READY_LIST + 36] = 0; //IP to logical address
SP = 3 * 512;
[28 * 512] = 0;
breakpoint;
alias counter S7;
counter = 0;
while (counter < 128) do
	[FILE_TABLE + counter + 0 ] = -1;
	[FILE_TABLE + counter + 1 ] = 0;
	counter = counter + 2;
endwhile;
counter = 0;
alias process S8 ;
process = 1536 + 15;
while (process < 2559)do
	while (counter < 16)do
		[process + 0 + counter] = -1;
		[process + 1 + counter] = -1;
		counter = counter + 2;
	endwhile;
	process = process + 32;
endwhile;	
ireturn;

